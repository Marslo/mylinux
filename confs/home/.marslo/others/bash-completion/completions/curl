# curl(1) completion                                       -*- shell-script -*-

# source ${iRCHOME}/bin/bash_completion_init_completion
# credit belongs to https://github.com/mobile-shell/mosh/issues/675#issuecomment-156457108
_init_completion()
{
    if declare -F _init_completions >/dev/null 2>&1; then
        _init_completion -s || return
    else
        __curl_init_completion || return
    fi
}

# get clue from https://github.com/kubernetes/kubernetes/pull/13570/files#diff-a3e7206bfad582143a70ae9eca530298c2461b5e5c583db62981c09e38fc40b3L1187
__curl_init_completion()
{
    COMPREPLY=()
    _get_comp_words_by_ref "$@" cur prev words cword
}

_curl()
{
    local cur prev words cword
    _init_completion || return

    case $prev in
        --ciphers | --connect-timeout | --continue-at | --form | --form-string | \
            --ftp-account | --ftp-alternative-to-user | --ftp-port | --header | --help | \
            --hostpubmd5 | --keepalive-time | --krb | --limit-rate | --local-port | \
            --mail-from | --mail-rcpt | --max-filesize | --max-redirs | --max-time | --pass | \
            --proto | --proto-redir | --proxy-user | --proxy1.0 | --quote | --range | \
            --request | --retry | --retry-delay | --retry-max-time | \
            --socks5-gssapi-service | --telnet-option | --tftp-blksize | --time-cond | \
            --url | --user | --user-agent | --version | --write-out | --resolve | --tlsuser | \
            --tlspassword | --globoff | -!(-*)[CFPHhmQrXtzuAVw])
            return
            ;;
        --config | --cookie | --cookie-jar | --dump-header | --egd-file | \
            --key | --libcurl | --output | --random-file | --upload-file | --trace | \
            --trace-ascii | --netrc-file | -!(-*)[KbcDoT])
            _filedir
            return
            ;;
        --cacert | --cert | -!(-*)E)
            _filedir '@(c?(e)rt|cer|pem|der)'
            return
            ;;
        --capath)
            _filedir -d
            return
            ;;
        --cert-type | --key-type)
            COMPREPLY=($(compgen -W 'DER PEM ENG' -- "$cur"))
            return
            ;;
        --crlfile)
            _filedir crl
            return
            ;;
        --data | --data-ascii | --data-binary | --data-urlencode | -!(-*)d)
            if [[ $cur == \@* ]]; then
                cur=${cur:1}
                _filedir
                if [[ ${#COMPREPLY[@]} -eq 1 && -d ${COMPREPLY[0]} ]]; then
                    COMPREPLY[0]+=/
                    compopt -o nospace
                fi
                COMPREPLY=("${COMPREPLY[@]/#/@}")
            fi
            return
            ;;
        --delegation)
            COMPREPLY=($(compgen -W 'none policy always' -- "$cur"))
            return
            ;;
        --engine)
            COMPREPLY=($(compgen -W 'list' -- "$cur"))
            return
            ;;
        --ftp-method)
            COMPREPLY=($(compgen -W 'multicwd nocwd singlecwd' -- "$cur"))
            return
            ;;
        --ftp-ssl-ccc-mode)
            COMPREPLY=($(compgen -W 'active passive' -- "$cur"))
            return
            ;;
        --interface)
            _available_interfaces -a
            return
            ;;
        --proxy | --socks4 | --socks4a | --socks5 | --socks5-hostname | -!(-*)x)
            _known_hosts_real -- "$cur"
            return
            ;;
        --pubkey)
            _xfunc ssh _ssh_identityfile pub
            return
            ;;
        --stderr)
            COMPREPLY=($(compgen -W '-' -- "$cur"))
            _filedir
            return
            ;;
        --tlsauthtype)
            COMPREPLY=($(compgen -W 'SRP' -- "$cur"))
            return
            ;;
        --globoff)
            COMPREPLY=($(compgen -W 'globoff' -- "$cur"))
            return
            ;;
    esac

    if [[ $cur == -* ]]; then
        COMPREPLY=($(compgen -W '$(_parse_help "$1")' -- "$cur"))
    fi
} &&
    complete -F _curl curl

# ex: filetype=sh
